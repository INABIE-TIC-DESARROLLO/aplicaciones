from django.conf import settings
from django.contrib.auth.hashers import check_password
from django.contrib.auth.models import User
import ldap3

server = ldap3.Server('inabie.local', 389)

from django.contrib.auth.backends import BaseBackend

class LdapInabie(BaseBackend):
    """
    Authenticate against the settings ADMIN_LOGIN and ADMIN_PASSWORD.

    Use the login name and a hash of the password. For example:

    ADMIN_LOGIN = 'admin'
    ADMIN_PASSWORD = 'pbkdf2_sha256$30000$Vo0VlMnkR4Bk$qEvtdyZRWTcOsCnI/oQ7fVOu1XAURIZYoOZ3iq8Dr4M='
    """

    def authenticate(self, request, username=None, password=None):
        conn = ldap3.Connection(server, username + '@inabie.gob.do', password, client_strategy=ldap3.SAFE_SYNC)

        if conn.bind()[0]:
            try:
                user = User.objects.get(username=username)
            except User.DoesNotExist:
                # Create a new user. There's no need to set a password
                # because only the password from settings.py is checked.
                user = User(username=username, password=password)
                user.is_staff = True
                user.is_superuser = False
                user.email = username + '@inabie.gob.do'
                user.save()
            return user
        return None

    def get_user(self, user_id):
        try:
            return User.objects.get(pk=user_id)
        except User.DoesNotExist:
            return None